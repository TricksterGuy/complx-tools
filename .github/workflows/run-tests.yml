name: Run Tests

on: [push, pull_request]

jobs:

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Test Dependencies (Linux)
      run: sudo apt install -y libboost-test-dev libboost-serialization-dev
      if: matrix.os == 'ubuntu-latest'
  
    - name: Install Test Dependencies (macOS)
      run: brew install boost
      if: matrix.os == 'macos-latest'

    - name: Create Local Config
      shell: bash
      run: ./configure test

    - name: Configure CMake
      shell: bash
      run: ./configure test

    - name: Build and Install
      shell: bash
      run: sudo cmake --build build-test --target install
      
    - name: Run LdConfig
      shell: bash
      run: sudo ldconfig
      if: matrix.os == 'ubuntu-latest'

    - name: Test
      shell: bash
      run: make -C build-test test

  test-windows:
    name: Run tests Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v2

    - name: Setup MSYS2
      # You may pin to the exact commit or the version.
      # uses: msys2/setup-msys2@e00cc7ca871a28b4d575714454769e57342da3da
      uses: msys2/setup-msys2@v2
      with:
        # Install packages after installation through pacman
        install: mingw-w64-x86_64-boost mingw-w64-x86_64-dlfcn mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc make

    - name: Build and Run Tests
      run: |
          ./configure test
          ./configure test
          cd build-test
          make install
          make test
